['{"job":"test_pandas","job_timestamp":1704316838599947}',
 '{"job":"test_pandas","job_timestamp":1704316838599947,"name":"filter_dataframe","features":{"A":{"count":3.0,"mean":4.0,"std":1.0,"min":3.0,"25%":3.5,"50%":4.0,"75%":4.5,"max":5.0,"skew":0.0},"B":{"count":3.0,"mean":40.0,"std":10.0,"min":30.0,"25%":35.0,"50%":40.0,"75%":45.0,"max":50.0,"skew":0.0}}}',
 '{"name":"filter_dataframe","job":"test_pandas","job_timestamp":1704316838599947,"finished_at":1704316838626873,"started_at":1704316838626557,"data":{"arguments":"{\\"kwargs_column_name\\": \\"B\\", \\"kwargs_threshold\\": 25, \\"args_0\\": \\",A,B\\\\ncount,5.0,5.0\\\\nmean,3.0,30.0\\\\nstd,1.5811388300841898,15.811388300841896\\\\nmin,1.0,10.0\\\\n25%,2.0,20.0\\\\n50%,3.0,30.0\\\\n75%,4.0,40.0\\\\nmax,5.0,50.0\\\\nskew,0.0,0.0\\\\n\\"}","number_of_return_arguments":1,"code":"    @usf.check()\\n    def filter_dataframe(df, column_name, threshold=0):\\n        \\"\\"\\"\\n        Filter a pandas dataframe based on a column and threshold.\\n\\n        Args:\\n        ----\\n            df (pd.DataFrame): The input dataframe.\\n            column_name (str): The name of the column to filter on.\\n            threshold (float, optional): The threshold value. Defaults to 0.\\n\\n        Returns:\\n        -------\\n            pd.DataFrame: The filtered dataframe.\\n        \\"\\"\\"\\n        filtered_df = df[df[column_name] > threshold]\\n        return filtered_df\\n","line_start":138}}']